// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux(a = a[0], b = c[0], sel = sel[1], out = outac0);
    Mux(a = b[0], b = d[0], sel = sel[1], out = outbd0);
    Mux(a = outac0, b = outbd0, sel = sel[0], out = out[0]);
    
    Mux(a = a[1], b = c[1], sel = sel[1], out = outac1);
    Mux(a = b[1], b = d[1], sel = sel[1], out = outbd1);
    Mux(a = outac1, b = outbd1, sel = sel[0], out = out[1]);
    Mux(a = a[2], b = c[2], sel = sel[1], out = outac2);
    Mux(a = b[2], b = d[2], sel = sel[1], out = outbd2);
    Mux(a = outac2, b = outbd2, sel = sel[0], out = out[2]);
    Mux(a = a[3], b = c[3], sel = sel[1], out = outac3);
    Mux(a = b[3], b = d[3], sel = sel[1], out = outbd3);
    Mux(a = outac3, b = outbd3, sel = sel[0], out = out[3]);
    Mux(a = a[4], b = c[4], sel = sel[1], out = outac4);
    Mux(a = b[4], b = d[4], sel = sel[1], out = outbd4);
    Mux(a = outac4, b = outbd4, sel = sel[0], out = out[4]);
    Mux(a = a[5], b = c[5], sel = sel[1], out = outac5);
    Mux(a = b[5], b = d[5], sel = sel[1], out = outbd5);
    Mux(a = outac5, b = outbd5, sel = sel[0], out = out[5]);
    Mux(a = a[6], b = c[6], sel = sel[1], out = outac6);
    Mux(a = b[6], b = d[6], sel = sel[1], out = outbd6);
    Mux(a = outac6, b = outbd6, sel = sel[0], out = out[6]);
    Mux(a = a[7], b = c[7], sel = sel[1], out = outac7);
    Mux(a = b[7], b = d[7], sel = sel[1], out = outbd7);
    Mux(a = outac7, b = outbd7, sel = sel[0], out = out[7]);
    Mux(a = a[8], b = c[8], sel = sel[1], out = outac8);
    Mux(a = b[8], b = d[8], sel = sel[1], out = outbd8);
    Mux(a = outac8, b = outbd8, sel = sel[0], out = out[8]);
    Mux(a = a[9], b = c[9], sel = sel[1], out = outac9);
    Mux(a = b[9], b = d[9], sel = sel[1], out = outbd9);
    Mux(a = outac9, b = outbd9, sel = sel[0], out = out[9]);
    Mux(a = a[10], b = c[10], sel = sel[1], out = outac10);
    Mux(a = b[10], b = d[10], sel = sel[1], out = outbd10);
    Mux(a = outac10, b = outbd10, sel = sel[0], out = out[10]);
    Mux(a = a[11], b = c[11], sel = sel[1], out = outac11);
    Mux(a = b[11], b = d[11], sel = sel[1], out = outbd11);
    Mux(a = outac11, b = outbd11, sel = sel[0], out = out[11]);
    Mux(a = a[12], b = c[12], sel = sel[1], out = outac12);
    Mux(a = b[12], b = d[12], sel = sel[1], out = outbd12);
    Mux(a = outac12, b = outbd12, sel = sel[0], out = out[12]);
    Mux(a = a[13], b = c[13], sel = sel[1], out = outac13);
    Mux(a = b[13], b = d[13], sel = sel[1], out = outbd13);
    Mux(a = outac13, b = outbd13, sel = sel[0], out = out[13]);
    Mux(a = a[14], b = c[14], sel = sel[1], out = outac14);
    Mux(a = b[14], b = d[14], sel = sel[1], out = outbd14);
    Mux(a = outac14, b = outbd14, sel = sel[0], out = out[14]);
    Mux(a = a[15], b = c[15], sel = sel[1], out = outac15);
    Mux(a = b[15], b = d[15], sel = sel[1], out = outbd15);
    Mux(a = outac15, b = outbd15, sel = sel[0], out = out[15]);
    }