// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    //See CODE 199!!! //But he suggested sending data to all, and only differentiating when retrieving. //Do we separate at start or at end?

    Register(in = in, load = load, out = fromReg000);
    Register(in = in, load = load, out = fromReg001);
    Register(in = in, load = load, out = fromReg010);
    Register(in = in, load = load, out = fromReg011);
    Register(in = in, load = load, out = fromReg100);
    Register(in = in, load = load, out = fromReg101);
    Register(in = in, load = load, out = fromReg110);
    Register(in = in, load = load, out = fromReg111);

    Mux8Way16(a = fromReg000, b = fromReg001, c = fromReg010, d = fromReg011, e = fromReg100, f = fromReg101, g = fromReg110, h = fromReg111, sel = address, out = out);


}