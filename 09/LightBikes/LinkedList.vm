function LinkedList.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 0
push pointer 0
return
function LinkedList.isEmpty 0
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function LinkedList.add 1
push argument 0
pop pointer 0
push pointer 0
call LinkedList.isEmpty 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push argument 2
push constant 0
call Node.new 3
pop local 0
push local 0
pop this 0
goto IF_END0
label IF_FALSE0
push argument 1
push argument 2
push this 0
call Node.new 3
pop local 0
push local 0
pop this 0
label IF_END0
push constant 0
return
function LinkedList.clear 1
push argument 0
pop pointer 0
label WHILE_EXP0
push this 0
call Node.getNext 1
push constant 0
eq
not
not
if-goto WHILE_END0
push this 0
call Node.getNext 1
pop local 0
push this 0
push local 0
call Node.getNext 1
call Node.setNext 2
pop temp 0
push local 0
call Node.dispose 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function LinkedList.drawTrail 2
push argument 0
pop pointer 0
push pointer 0
call LinkedList.isEmpty 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
pop local 0
push this 0
call Node.getNext 1
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call Node.draw 1
pop temp 0
push local 1
pop local 0
push local 0
call Node.getNext 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
function LinkedList.dispose 0
push argument 0
pop pointer 0
push pointer 0
call LinkedList.clear 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
